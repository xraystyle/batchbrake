#!/usr/bin/ruby

# Notes:


@temp_dir = '~/.tmp'
@itunes_dir = '~/Music/iTunes/iTunes\ Music/Automatically\ Add\ to\ iTunes/'



def choose_preset

	puts
	puts "Choose a Handbrake Preset from the list."

	# Read the current list of presets from the CLI app.
	presets = `handbrake --preset-list`.scan(/\+[\s]([a-zA-Z0-9\s&]+):/)
	# How many presets did we get?
	number_of_presets_range = 1..presets.count

	puts
	# Output the list cleanly, two presets per line.
	presets.each_with_index do |preset,i|
		if i % 2 == 0
			print "#{i + 1}. #{preset[0]}".ljust(35)
		else
			puts "#{i + 1}. #{preset[0]}"
		end
	end
	puts
	puts
	response = nil
	print "Selected preset: "
	response = STDIN.gets.chomp.strip.downcase.to_i

	unless number_of_presets_range.include? response

		puts "Invalid preset. Enter just the number."
		response = nil
		sleep 2
		system 'clear'
		choose_preset

	end

	@selected_preset = presets[response - 1][0] if response

	# puts @selected_preset

end


# Handbrake the file passed to the method as a param.
def handbrake_it(filename)
	
	system 'clear'

	puts "Processing file #{File.basename(filename)}..."

	sleep 3

	# brake that shit.
	# puts "handbrake -i #{filename} -o #{@itunes_dir}#{File.basename(filename)}.m4v' --preset=\"#{@selected_preset}\""
	`handbrake -i \"#{filename}\" -o #{@temp_dir}#{File.basename(filename)}.m4v --preset=\"#{@selected_preset}\"`

end



# Figure out if ARGV[0] is a file or a directory.
# Set up the handbrake job accordingly. 
def set_up_job

	`mkdir ~/.tmp`

	puts "Begining Handbrake job..."
	sleep 2
	if File.directory?(File.expand_path(ARGV[0]))

		Dir.foreach(File.expand_path(ARGV[0])) do |file|

			# Skip dot, dotdot and folders.
			next if file == "." or file == ".."

			next if File.directory?(File.expand_path(ARGV[0] + file))

			# Exclude dotfiles.
			next if /^\.(.*)$/.match(file)

			handbrake_it(File.expand_path(ARGV[0] + "/" + file))

			# @itunes_dir = '~/Music/iTunes/iTunes\ Music/Automatically\ Add\ to\ iTunes/'

			# # brake that shit.
			# puts "handbrake -i #{File.expand_path(ARGV[0] + "/" + file)} -o #{@itunes_dir}#{file}.m4v' --preset=\"#{@selected_preset}\""
			# # `handbrake -i #{File.expand_path(ARGV[0] + "/" + file)} -o #{@itunes_dir}#{file}.m4v --preset=\"#{@selected_preset}\"`

		end

	else

		handbrake_it(ARGV[0])

	end
	
	`mv ~/.tmp/* #{@itunes_dir}/`
	`rm -rf ~/.tmp`
	
end


# ------------------------------------------------------------------------------------
system 'clear'

puts "     -----Handbrake Batch Encoder-----     "

puts

unless ARGV.any?

	puts "Give the folder containing the files to transcode as a command line argument, or a single file to encode."
	puts "e.g. batchbrake ~/Movies/downloaded_tv_episodes/"
	puts
	exit!
	
end

# puts File.expand_path(ARGV[0])

choose_preset

set_up_job
